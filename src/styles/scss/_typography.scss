// TYPOGRAPHY

.text-stroke {
  -webkit-text-stroke-color: $stroke;
  -webkit-text-stroke-width: 1px;
}

$fonts: (
  'font-size': (
    'prefix': 'fs',
    'values': (
      '1': $h1-font-size,
      '2': $h2-font-size,
      '3': $h3-font-size,
      '4': $h4-font-size,
      '5': $h5-font-size,
      '6': $h6-font-size,
    ),
  ),
  'font-weight': (
    'prefix': 'fw',
    'values': (
      'lighter': $font-weight-lighter,
      'light': $font-weight-light,
      'normal': $font-weight-normal,
      'bold': $font-weight-bold,
      'bolder': $font-weight-bolder,
    ),
  ),
  'letter-spacing': (
    'prefix': 'ls',
    'values': (
      'sm': $letter-spacing-base * 1.1,
      'md': $letter-spacing-base * 1.2,
      'lg': $letter-spacing-base * 1.3,
    ),
  ),
);
@each $property, $map in $fonts {
  $prefix: map-get($map, 'prefix');
  $values: map-get($map, 'values');
  @each $k, $v in $values {
    @if ($prefix == 'fs') {
      .#{$prefix}-#{$k} {
        #{$property}: $v;
      }
      // HEADINGS
      .h#{$k} {
        #{$property}: $v;
        font-family: $font-default;
        font-weight: $font-weight-bold;
      }
      .h#{$k}-styled {
        #{$property}: $v;
        font-family: $font-styled;
        font-weight: $font-weight-normal;
      }
      .h#{$k}-stroke {
        #{$property}: $v;
        font-family: $font-styled;
        font-weight: $font-weight-normal;
        -webkit-text-stroke-width: 1px;
        -webkit-text-stroke-color: $stroke;
      }
    } @else {
      .#{$prefix}-#{$k} {
        #{$property}: $v;
        font-size: var(--size);
      }
    }
  }
}
